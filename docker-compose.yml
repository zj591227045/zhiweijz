services:
  # PostgreSQL 数据库
  postgres:
    image: docker.1ms.run/postgres:15-alpine
    container_name: zhiweijz-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: zhiweijz
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - zhiweijz-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d zhiweijz"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 后端服务
  backend:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: zhiweijz-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/zhiweijz?schema=public
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_change_in_production}
      JWT_EXPIRES_IN: 7d
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "3000:3000"
    networks:
      - zhiweijz-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web前端服务
  frontend:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: zhiweijz-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DOCKER_ENV: "true"
      NEXT_PUBLIC_API_URL: /api
      BACKEND_URL: http://backend:3000
    ports:
      - "3003:3000"
    networks:
      - zhiweijz-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: zhiweijz-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - zhiweijz-network
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local
  nginx_logs:
    driver: local

networks:
  zhiweijz-network:
    driver: bridge
